#!/usr/bin/env python3
"""
Script ch·∫°y Spark job tr√™n Windows (kh√¥ng d√πng WSL)
ƒê∆°n gi·∫£n h√≥a cho Windows thu·∫ßn t√∫y
"""

import subprocess
import sys
import os
from datetime import datetime

def run_script(script_name, description):
    """Ch·∫°y Python script"""
    print(f"\n{'='*30}")
    print(f"üîÑ {description}")
    print(f"‚è∞ {datetime.now().strftime('%H:%M:%S')}")
    print(f"{'='*30}")
    
    python_exe = r"P:\coddd\Capstone_group4\.venv\Scripts\python.exe"
    
    try:
        result = subprocess.run([python_exe, script_name], 
                              check=True)
        print(f"‚úÖ {description} - SUCCESS")
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå {description} - FAILED (code {e.returncode})")
        return False
    except Exception as e:
        print(f"‚ùå Unexpected error: {e}")
        return False

def check_files():
    """Ki·ªÉm tra file c·∫ßn thi·∫øt"""
    required_files = [
        "spark_preprocessing.py",
        "shipping_analy.py", 
        "config.py",
        "mysql-connector-j-8.3.0.jar",
        "spark_utils.py",
    ]
    
    missing = [f for f in required_files if not os.path.exists(f)]
    
    if missing:
        print("‚ùå Missing files:")
        for f in missing:
            print(f"  - {f}")
        return False
    
    print("‚úÖ All required files present")
    return True

def main():
    """H√†m ch√≠nh - Windows Pipeline"""
    print("üî• WINDOWS SPARK PIPELINE")
    print("=" * 40)
    print(f"üìÅ Directory: {os.getcwd()}")
    print(f"‚è∞ Start: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # Ki·ªÉm tra files
    if not check_files():
        return False
    
    # Ch·∫°y preprocessing
    if not run_script("spark_preprocessing.py", "Data Preprocessing"):
        return False
    
    # Ch·∫°y analysis
    if not run_script("shipping_analy.py", "Shipping Analysis"):
        return False
    
    print(f"\nüéâ PIPELINE COMPLETED!")
    print(f"‚è∞ End: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    return True

if __name__ == "__main__":
    success = main()
    input("\nPress Enter to exit...")
    sys.exit(0 if success else 1)
